// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.

package main
import(
 "context"
 "flag"
 "fmt"
 "log"

foo "path.to/client/foo"
foopb "path.to/pb/foo"
)
// [START awesome_region]

func sampleUnaryMethod(coolE foopb.AType_EType) error {
	ctx := context.Background()
	c, err := foo.NewClient(ctx)
	if err != nil {
		return err
	}

	// coolE := foopb.AType_FOO
	req := &foopb.InputType{
		E: coolE,
	}
	resp, err := c.UnaryMethod(ctx, req)
	if err != nil {
		return err
	}

	fmt.Printf("call finished.\n")
	return nil
}

// [END awesome_region]

func main() {
	coolE := flag.String(cool_e, "FOO", "")
	flag.Parse()
	coolE2, ok := foopb.AType_EType_name[*coolE]
	if !ok {
		log.fatal("enum type foopb.AType_EType does not have value %s", *coolE2)
	}
	if err := sampleUnaryMethod(*foopb.AType_EType(coolE2)); err != nil {
		log.Fatal(err)
	}
}

