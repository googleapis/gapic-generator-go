---
name: Generator tests
on:
  push:
    branches:
      - master
      - diregapic-dev-branch
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.15.8'
    - name: Check formatting
      run: gofmt -l ./ > gofmt.txt && ! [ -s gofmt.txt ]
    - name: Install golint
      run: go get -u golang.org/x/lint/golint
      if: ${{ always() }}
    - name: Lint
      # Exclude all gensample code and the grpc_service_config package (it is generated).
      run: golint -set_exit_status $(go list ./... | grep -v 'sample\|grpc_service_config') > golint.txt
      if: ${{ always() }}
    - name: Vet
      # The mod download is there to prevent go vet from logging mod downloads
      # which would mess up the empty vetting results check.
      # Exclude all gensample code and the grpc_service_config package (it is generated).
      run: go mod download && go vet $(go list ./... | grep -v 'sample\|grpc_service_config') > govet.txt && ! [ -s govet.txt ]
      if: ${{ always() }}
    - name: Check license
      run: go run ./util/cmd/license
      if: ${{ always() }}
    - uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: linting-results
        path: |
          gofmt.txt
          golint.txt
          govet.txt
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.15.8'
    - run: go test ./...
  integration-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.15.8'
    - name: Install protoc
      run: |
        sudo mkdir -p /usr/src/protoc/
        sudo chown -R ${USER} /usr/src/
        curl --location https://github.com/google/protobuf/releases/download/v3.12.1/protoc-3.12.1-linux-x86_64.zip --output /usr/src/protoc/protoc-3.12.1.zip
        cd /usr/src/protoc/
        unzip protoc-3.12.1.zip
        sudo ln -s /usr/src/protoc/bin/protoc /usr/local/bin/protoc
    - name: Install tools and dependencies
      run: |
        go install github.com/golang/protobuf/protoc-gen-go
        curl -sSL https://github.com/googleapis/googleapis/archive/master.zip > googleapis.zip
        unzip googleapis.zip -x "googleapis-master/google/ads/*"
        mv googleapis-master /tmp/googleapis
    - name: Run integration tests
      run: |
        export PATH=$PATH:protobuf/bin
        export GOOGLEAPIS=/tmp/googleapis
        make test
  bazel-build:
    runs-on: ubuntu-latest
    container: gcr.io/gapic-images/googleapis:latest
    # Dockerfile for this image: https://github.com/googleapis/googleapis-discovery/blob/master/Dockerfile
    steps:
    - uses: actions/checkout@v2
    - name: Run bazel build
      run: bazel build '//...'
    - name: Run bazel test
      run: bazel test '//...'
