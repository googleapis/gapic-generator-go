func ExampleNewFooClient() {
	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use client.
	_ = c
}

func ExampleFooClient_GetEmptyThing() {
	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &mypackagepb.InputType{
		// TODO: Fill request struct fields.
	}
	err = c.GetEmptyThing(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleFooClient_GetOneThing() {
	// import mypackagepb "mypackage"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &mypackagepb.InputType{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetOneThing(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleFooClient_GetBigThing() {
	// import mypackagepb "mypackage"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &mypackagepb.InputType{
		// TODO: Fill request struct fields.
	}
	op, err := c.GetBigThing(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	resp, err := op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleFooClient_GetManyThings() {
	// import mypackagepb "mypackage"
	// import "google.golang.org/api/iterator"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &mypackagepb.PageInputType{
		// TODO: Fill request struct fields.
	}
	it := c.GetManyThings(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleFooClient_BidiThings() {
	// import mypackagepb "mypackage"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	stream, err := c.BidiThings(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	go func() {
		reqs := []*mypackagepb.InputType{
			// TODO: Create requests.
		}
		for _, req := range reqs {
			if err := stream.Send(req); err != nil {
				// TODO: Handle error.
			}
		}
		stream.CloseSend()
	}()
	for {
		resp, err := stream.Recv()
		if err == io.EOF {
			break
		}
		if err != nil {
			// TODO: handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleFooClient_EmptyLRO() {
	// import mypackagepb "mypackage"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &mypackagepb.InputType{
		// TODO: Fill request struct fields.
	}
	op, err := c.EmptyLRO(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	err = op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleFooClient_RespLRO() {
	// import mypackagepb "mypackage"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &mypackagepb.InputType{
		// TODO: Fill request struct fields.
	}
	op, err := c.RespLRO(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}

	resp, err := op.Wait(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleFooClient_ListLocations() {
	// import locationpb "google.golang.org/genproto/googleapis/cloud/location"
	// import "google.golang.org/api/iterator"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &locationpb.ListLocationsRequest{
		// TODO: Fill request struct fields.
	}
	it := c.ListLocations(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleFooClient_GetLocation() {
	// import locationpb "google.golang.org/genproto/googleapis/cloud/location"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &locationpb.GetLocationRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetLocation(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleFooClient_SetIamPolicy() {
	// import iampb "google.golang.org/genproto/googleapis/iam/v1"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &iampb.SetIamPolicyRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.SetIamPolicy(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleFooClient_GetIamPolicy() {
	// import iampb "google.golang.org/genproto/googleapis/iam/v1"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &iampb.GetIamPolicyRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetIamPolicy(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleFooClient_TestIamPermissions() {
	// import iampb "google.golang.org/genproto/googleapis/iam/v1"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &iampb.TestIamPermissionsRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.TestIamPermissions(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleFooClient_ListOperations() {
	// import longrunningpb "google.golang.org/genproto/googleapis/longrunning"
	// import "google.golang.org/api/iterator"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &longrunningpb.ListOperationsRequest{
		// TODO: Fill request struct fields.
	}
	it := c.ListOperations(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp
	}
}

func ExampleFooClient_GetOperation() {
	// import longrunningpb "google.golang.org/genproto/googleapis/longrunning"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &longrunningpb.GetOperationRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.GetOperation(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleFooClient_DeleteOperation() {
	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &longrunningpb.DeleteOperationRequest{
		// TODO: Fill request struct fields.
	}
	err = c.DeleteOperation(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleFooClient_CancelOperation() {
	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &longrunningpb.CancelOperationRequest{
		// TODO: Fill request struct fields.
	}
	err = c.CancelOperation(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
}

func ExampleFooClient_WaitOperation() {
	// import longrunningpb "google.golang.org/genproto/googleapis/longrunning"

	ctx := context.Background()
	c, err := Bar.NewFooClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}

	req := &longrunningpb.WaitOperationRequest{
		// TODO: Fill request struct fields.
	}
	resp, err := c.WaitOperation(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

