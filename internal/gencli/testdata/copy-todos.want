// Code generated. DO NOT EDIT.

package main

import (
	"bufio"
	"fmt"
	"os"

	"github.com/golang/protobuf/jsonpb"
	"github.com/spf13/cobra"

	todopb "github.com/googleapis/todo/generated"
)

var CopyTodosFromFile string

func init() {
	TodoServiceCmd.AddCommand(CopyTodosCmd)

	CopyTodosCmd.Flags().StringVar(&CopyTodosFromFile, "from_file", "", "Absolute path to JSON file containing request payload")

}

var CopyTodosCmd = &cobra.Command{
	Use:   "copy-todos",
	Short: "stream several todos to create",

	PreRun: func(cmd *cobra.Command, args []string) {

	},
	RunE: func(cmd *cobra.Command, args []string) (err error) {

		in := os.Stdin
		if CopyTodosFromFile != "" {
			in, err = os.Open(CopyTodosFromFile)
			if err != nil {
				return err
			}
			defer in.Close()

		}

		stream, err := TodoClient.CopyTodos(ctx)

		if Verbose {
			fmt.Println("Client stream open. Close with ctrl+D.")
		}

		var CopyTodosInput todopb.Todo
		scanner := bufio.NewScanner(in)
		for scanner.Scan() {
			input := scanner.Text()
			if input == "" {
				continue
			}
			err = jsonpb.UnmarshalString(input, &CopyTodosInput)
			if err != nil {
				return err
			}

			err = stream.Send(&CopyTodosInput)
			if err != nil {
				return err
			}
		}
		if err = scanner.Err(); err != nil {
			return err
		}

		resp, err := stream.CloseAndRecv()
		if err != nil {
			return err
		}

		if Verbose {
			fmt.Print("Output: ")
		}
		printMessage(resp)

		return err
	},
}
