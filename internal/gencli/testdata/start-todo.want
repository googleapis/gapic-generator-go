// Code generated. DO NOT EDIT.

package main

import (
	"github.com/spf13/cobra"

	todopb "github.com/googleapis/todo/generated"
)

var StartTodoInput todopb.StartTodoRequest

var StartTodoFromFile string

var StartTodoFollow bool

var StartTodoPollOperation string

func init() {
	TodoServiceCmd.AddCommand(StartTodoCmd)

	StartTodoCmd.Flags().Int32Var(&StartTodoInput.Id, "id", 0, "task to start")

	StartTodoCmd.Flags().StringVar(&StartTodoFromFile, "from_file", "", "Absolute path to JSON file containing request payload")

	StartTodoCmd.Flags().BoolVar(&StartTodoFollow, "follow", false, "Block until the long running operation completes")

	TodoServiceCmd.AddCommand(StartTodoPollCmd)

	StartTodoPollCmd.Flags().BoolVar(&StartTodoFollow, "follow", false, "Block until the long running operation completes")

	StartTodoPollCmd.Flags().StringVar(&StartTodoPollOperation, "operation", "", "Required. Operation name to poll for")

	StartTodoPollCmd.MarkFlagRequired("operation")

}

var StartTodoCmd = &cobra.Command{
	Use:   "start-todo",
	Short: "starts a todo",
	Long:  "starts a todo that has not been completed yet",
	PreRun: func(cmd *cobra.Command, args []string) {

		if StartTodoFromFile == "" {

			cmd.MarkFlagRequired("id")

		}

	},
	RunE: func(cmd *cobra.Command, args []string) (err error) {

		in := os.Stdin
		if StartTodoFromFile != "" {
			in, err = os.Open(StartTodoFromFile)
			if err != nil {
				return err
			}
			defer in.Close()

			err = jsonpb.Unmarshal(in, &StartTodoInput)
			if err != nil {
				return err
			}

		}

		if Verbose {
			printVerboseInput("Todo", "StartTodo", &StartTodoInput)
		}
		resp, err := TodoClient.StartTodo(ctx, &StartTodoInput)

		if !StartTodoFollow {
			var s interface{}
			s = resp.Name()

			if OutputJSON {
				d := make(map[string]string)
				d["operation"] = resp.Name()
				s = d
			}

			printMessage(s)
			return err
		}

		result, err := resp.Wait(ctx)
		if err != nil {
			return err
		}

		if Verbose {
			fmt.Print("Output: ")
		}
		printMessage(result)

		return err
	},
}

var StartTodoPollCmd = &cobra.Command{
	Use:   "poll-start-todo",
	Short: "Poll the status of a StartTodoOperation by name",
	RunE: func(cmd *cobra.Command, args []string) (err error) {
		op := TodoClient.StartTodoOperation(StartTodoPollOperation)

		if StartTodoFollow {
			resp, err := op.Wait(ctx)
			if err != nil {
				return err
			}

			if Verbose {
				fmt.Print("Output: ")
			}
			printMessage(resp)
			return err
		}

		resp, err := op.Poll(ctx)
		if err != nil {
			return err
		} else if resp != nil {
			if Verbose {
				fmt.Print("Output: ")
			}

			printMessage(resp)
			return
		}

		fmt.Println(fmt.Sprintf("Operation %s not done", op.Name()))

		return err
	},
}
