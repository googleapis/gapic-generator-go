// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/api/client.proto

package annotations // import "google.golang.org/genproto/googleapis/api/annotations"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Information about the API as a whole.
// This is generally used for client library packaging and documentation, and
// only needs to be set when correct values can not be inferred from the proto
// package.
//
// For example, Pub/Sub sets this to:
//
//     option (google.api.package) = {
//       title: "Pub/Sub"
//       namespace: ["Google", "Cloud"]
//       version: "v1"
//     };
//
// If this is set, then the `title`, `namespace`, and `version` fields
// should all be set.
type Package struct {
	// Required. The title of the package (and, by default, the product).
	//
	// This should be set to the colloquial name of the API, and is used
	// for things such as determining the package name.
	//
	// Specify this in appropriate title casing, with space as the word
	// separator (e.g. "Speech", "BigQuery", "Video Intelligence", "Pub/Sub").
	//
	// This value may be used as-is in documentation, and code generators should
	// normalize it appropriately for idiomatic package, module, etc. names in
	// their language.
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Required. The namespace.
	//
	// This should be set to the package namespace, using appropriate title
	// casing (the same casing as `title`, above). Client libraries
	// should normalize it appropriately for package, module, etc. names in
	// their language.
	//
	//   Example: ["Google", "Cloud"]
	//
	// This is used to inform the prefix for package manager names, and the code
	// layout in cases where the language-specific protobuf options are not set.
	//
	// The "required" note above is "soft". This *should* be set, but an empty
	// namespace is technically valid.
	Namespace []string `protobuf:"bytes,2,rep,name=namespace,proto3" json:"namespace,omitempty"`
	// Required. The version.
	// This should be set to the API version, such as "v1".
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// The title of the product, if different from the package title above.
	// This may be used in documentation and package metadata.
	ProductTitle         string   `protobuf:"bytes,4,opt,name=product_title,json=productTitle,proto3" json:"product_title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Package) Reset()         { *m = Package{} }
func (m *Package) String() string { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()    {}
func (*Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_client_f641ab20c20aa9c4, []int{0}
}
func (m *Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package.Unmarshal(m, b)
}
func (m *Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package.Marshal(b, m, deterministic)
}
func (dst *Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package.Merge(dst, src)
}
func (m *Package) XXX_Size() int {
	return xxx_messageInfo_Package.Size(m)
}
func (m *Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Package proto.InternalMessageInfo

func (m *Package) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Package) GetNamespace() []string {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Package) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Package) GetProductTitle() string {
	if m != nil {
		return m.ProductTitle
	}
	return ""
}

var E_Package = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FileOptions)(nil),
	ExtensionType: (*Package)(nil),
	Field:         1048,
	Name:          "google.api.package",
	Tag:           "bytes,1048,opt,name=package",
	Filename:      "google/api/client.proto",
}

var E_DefaultHost = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.ServiceOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         1049,
	Name:          "google.api.default_host",
	Tag:           "bytes,1049,opt,name=default_host,json=defaultHost",
	Filename:      "google/api/client.proto",
}

var E_OauthScopes = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.ServiceOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         1050,
	Name:          "google.api.oauth_scopes",
	Tag:           "bytes,1050,opt,name=oauth_scopes,json=oauthScopes",
	Filename:      "google/api/client.proto",
}

var E_MethodSignature = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: ([]string)(nil),
	Field:         1051,
	Name:          "google.api.method_signature",
	Tag:           "bytes,1051,rep,name=method_signature,json=methodSignature",
	Filename:      "google/api/client.proto",
}

func init() {
	proto.RegisterType((*Package)(nil), "google.api.Package")
	proto.RegisterExtension(E_Package)
	proto.RegisterExtension(E_DefaultHost)
	proto.RegisterExtension(E_OauthScopes)
	proto.RegisterExtension(E_MethodSignature)
}

func init() { proto.RegisterFile("google/api/client.proto", fileDescriptor_client_f641ab20c20aa9c4) }

var fileDescriptor_client_f641ab20c20aa9c4 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4b, 0x6f, 0xea, 0x30,
	0x10, 0x85, 0x15, 0xe0, 0x5e, 0xc0, 0x70, 0x1f, 0x4a, 0x2b, 0x35, 0xaa, 0x50, 0x1b, 0xb5, 0x1b,
	0x56, 0x89, 0xd4, 0xee, 0xe8, 0x0a, 0x90, 0xfa, 0x52, 0xab, 0x46, 0xd0, 0x55, 0x37, 0x91, 0x71,
	0x8c, 0xb1, 0x1a, 0x3c, 0x96, 0xed, 0xb0, 0xea, 0x0f, 0xe9, 0x63, 0xd7, 0x5f, 0x5a, 0xe1, 0x38,
	0x05, 0x89, 0x45, 0x77, 0x99, 0x39, 0x73, 0xbe, 0x39, 0x93, 0x04, 0x1d, 0x30, 0x00, 0x96, 0xd3,
	0x18, 0x4b, 0x1e, 0x93, 0x9c, 0x53, 0x61, 0x22, 0xa9, 0xc0, 0x80, 0x8f, 0x4a, 0x21, 0xc2, 0x92,
	0x1f, 0x86, 0x6e, 0xc8, 0x2a, 0xb3, 0x62, 0x1e, 0x67, 0x54, 0x13, 0xc5, 0xa5, 0x01, 0x55, 0x4e,
	0x9f, 0xbc, 0xa0, 0x66, 0x82, 0xc9, 0x33, 0x66, 0xd4, 0xdf, 0x47, 0xbf, 0x0c, 0x37, 0x39, 0x0d,
	0xbc, 0xd0, 0xeb, 0xb7, 0x27, 0x65, 0xe1, 0xf7, 0x50, 0x5b, 0xe0, 0x25, 0xd5, 0x12, 0x13, 0x1a,
	0xd4, 0xc2, 0x7a, 0xbf, 0x3d, 0xd9, 0x34, 0xfc, 0x00, 0x35, 0x57, 0x54, 0x69, 0x0e, 0x22, 0xa8,
	0x5b, 0x57, 0x55, 0xfa, 0xa7, 0xe8, 0x8f, 0x54, 0x90, 0x15, 0xc4, 0xa4, 0x25, 0xb5, 0x61, 0xf5,
	0xae, 0x6b, 0x3e, 0xae, 0x7b, 0x83, 0x3b, 0xd4, 0x94, 0x6e, 0x7b, 0x2f, 0x72, 0xb9, 0xab, 0xac,
	0xd1, 0x25, 0xcf, 0xe9, 0x83, 0x34, 0x1c, 0x84, 0x0e, 0x5e, 0x5b, 0xa1, 0xd7, 0xef, 0x9c, 0xed,
	0x45, 0x9b, 0xe3, 0x22, 0x97, 0x7b, 0x52, 0x21, 0x06, 0x63, 0xd4, 0xcd, 0xe8, 0x1c, 0x17, 0xb9,
	0x49, 0x17, 0xa0, 0x8d, 0x7f, 0xbc, 0x83, 0x9c, 0x52, 0xb5, 0xe2, 0xe4, 0x9b, 0xfa, 0xd6, 0xb2,
	0x99, 0x3a, 0xce, 0x75, 0x0d, 0xda, 0xac, 0x21, 0x80, 0x0b, 0xb3, 0x48, 0x35, 0x01, 0x49, 0xf5,
	0xcf, 0x90, 0x77, 0x07, 0xb1, 0xae, 0xa9, 0x35, 0x0d, 0x6e, 0xd1, 0xff, 0x25, 0x35, 0x0b, 0xc8,
	0x52, 0xcd, 0x99, 0xc0, 0xa6, 0x50, 0xd4, 0x3f, 0xda, 0x01, 0xdd, 0xdb, 0x91, 0x8a, 0xf3, 0xd1,
	0xb2, 0x2f, 0xf7, 0x5f, 0x69, 0x9c, 0x56, 0xbe, 0x11, 0x47, 0x7f, 0x09, 0x2c, 0xb7, 0x0e, 0x1f,
	0x75, 0xc6, 0xf6, 0x7b, 0x27, 0x6b, 0x4e, 0xe2, 0x3d, 0x0d, 0x9d, 0xc4, 0x20, 0xc7, 0x82, 0x45,
	0xa0, 0x58, 0xcc, 0xa8, 0xb0, 0x5b, 0xe2, 0x52, 0xc2, 0x92, 0x6b, 0xfb, 0xa3, 0x60, 0x21, 0xc0,
	0x60, 0xbb, 0xef, 0x62, 0xeb, 0xf9, 0xb3, 0xd6, 0xb8, 0x1a, 0x26, 0x37, 0xb3, 0xdf, 0xd6, 0x74,
	0xfe, 0x15, 0x00, 0x00, 0xff, 0xff, 0x96, 0xee, 0xb1, 0x8e, 0x5c, 0x02, 0x00, 0x00,
}
